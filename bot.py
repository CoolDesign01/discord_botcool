import os 
import discord
import asyncio
from discord.ext import commands, tasks
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, time

from myserver import server_on

import json
import platform

# ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ Event Loop ‡∏ö‡∏ô Windows
if platform.system() == "Windows":
    import asyncio
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ intents ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á bot
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

# ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô config.json
def load_config():
    with open("config.json", "r", encoding="utf-8") as file:
        return json.load(file)

def save_config(config):
    with open("config.json", "w", encoding="utf-8") as file:
        json.dump(config, file, ensure_ascii=False, indent=4)

# ‡πÇ‡∏´‡∏•‡∏î config
config = load_config()

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
async def send_announcement(message, title="‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", image_url=None, color=discord.Color.green()):
    channel = bot.get_channel(config["announcement_channel_id"])
    if channel:
        embed = discord.Embed(
            title=title,
            description=message,
            color=color
        )
        if image_url:  # ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            embed.set_image(url=image_url)

        embed.set_footer(text="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏ö‡∏≠‡∏ó")
        await channel.send(embed=embed)

# ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
@tasks.loop(minutes=1)
async def check_schedule():
    now = datetime.now().strftime("%H:%M")
    schedule = config["schedule"]

    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô
    if now == schedule["daily_open"]:
        await send_announcement(
            config["shop_open_message"],
            title="üì¢ ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!",
            image_url="https://cdn.discordapp.com/attachments/1094275872959246366/1317852648895942730/Free_Simple_Modern_Circle_Design_Studio_Logo.png?ex=6760316c&is=675edfec&hm=11d5ed9a0a0dd40ad8e98d9fe921d72c8d4f649562e01a7aaa2e547696da1df4&",  # ‡πÉ‡∏™‡πà URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            color=discord.Color.from_rgb(114,137,218)
        )

    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô
    elif now == schedule["daily_close"]:
        await send_announcement(
            config["shop_close_message"],
            title="üîî ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!!",
            image_url="https://cdn.discordapp.com/attachments/1094275872959246366/1317852648895942730/Free_Simple_Modern_Circle_Design_Studio_Logo.png?ex=6760316c&is=675edfec&hm=11d5ed9a0a0dd40ad8e98d9fe921d72c8d4f649562e01a7aaa2e547696da1df4&",  # ‡πÉ‡∏™‡πà URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            color=discord.Color.from_rgb(114,137,218)  
        )
    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
    for custom in schedule["custom_announcements"]:
        if now == custom["time"]:
            await send_announcement(custom["message"])

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
@bot.command(name="‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤")
async def set_schedule(ctx, time_type: str, new_time: str):
    if time_type in ["‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô", "‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô"]:
        key = "daily_open" if time_type == "‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô" else "daily_close"
        config["schedule"][key] = new_time
        save_config(config)
        await ctx.send(f"‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ {time_type} ‡πÄ‡∏õ‡πá‡∏ô {new_time} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")
    else:
        await ctx.send("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏ß‡∏•‡∏≤: ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤
@bot.command(name="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô")
async def add_custom_announcement(ctx, time: str, *, message: str):
    config["schedule"]["custom_announcements"].append({"time": time, "message": message})
    save_config(config)
    await ctx.send(f"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: '{message}' ‡πÄ‡∏ß‡∏•‡∏≤ {time} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
@bot.command(name="‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á")
async def view_schedule(ctx):
    schedule = config["schedule"]
    daily_open = schedule["daily_open"]
    daily_close = schedule["daily_close"]
    custom_announcements = schedule["custom_announcements"]
    response = f"**‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô**\n- ‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô: {daily_open}\n- ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô: {daily_close}\n"
    if custom_announcements:
        response += "\n**‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á:**\n"
        for custom in custom_announcements:
            response += f"- ‡πÄ‡∏ß‡∏•‡∏≤ {custom['time']}: {custom['message']}\n"

    await ctx.send(response)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
@bot.command()
async def hello(ctx):
    await ctx.send(f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {ctx.author.mention}!")  # ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á

@bot.command()
async def add(ctx, a: int, b: int):
    result = a + b
    await ctx.send(f"‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á {a} ‡πÅ‡∏•‡∏∞ {b} ‡∏Ñ‡∏∑‡∏≠ {result}")

@bot.command()
async def info(ctx):
    embed = discord.Embed(title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≠‡∏ó", description="‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ö‡∏≠‡∏ó‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á", color=discord.Color.blue())
    embed.add_field(name="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á", value="`!hello`, `!add`, `!info`", inline=False)
    embed.set_footer(text="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ Atichat")
    await ctx.send(embed=embed)

@bot.command()
async def secret(ctx):
    if ctx.author.guild_permissions.administrator:
        await ctx.send("‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô! ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ!")
    else:
        await ctx.send("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!")

@bot.command()
async def test(ctx):
    await ctx.send("‡∏ó‡∏î‡∏™‡∏≠‡∏ö! ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß üöÄ")

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@bot.event
async def on_ready():
    print(f'‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞ {bot.user}')
    check_schedule.start()  # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô

# Event ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
@bot.event
async def on_message(message):
    print(f"‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {message.content} ‡∏à‡∏≤‡∏Å: {message.author}")
    await bot.process_commands(message)

server_on()


bot.run(os.getenv('TOKEN'))
